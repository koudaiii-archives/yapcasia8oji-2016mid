Kubernetes を使ってサービスを加速させる取り組み
YAP(achimon)C::Asia Hachioji 2016 mid

Kodai Sakabe
Wantedly, Inc
@koudaiii

* 背景

Kubernetes のようなクラスタリングの構成を新たに導入しようとした際に、
これまでの「どのアプリケーションがどのマシンで動いているかを意識する」 考え方から、
「どのアプリケーションがどのマシンで動くかはわからないけど、必要に応じてアプリケーションが動く」考え方にシフトする必要があります。

- 前半に、クラスタリングを導入しようとした際の Developer から見たメリット・デメリットと、クラスタリングで何を解決したいのかなどの背景
- 後半に、クラスタリングを構築するにあたって、実際に kubernetes on AWS を Production で運用した経験をkubernetes の入門

* サービスを加速させること

Wantedly は次々と大小様々なサービスを作られています。
それらのサービスは、一つのプロダクトなものから、単体だけでは成立しないモジュールみたいなサービスもあります。

そういったことものが出てくるのは Wantedly らしい文化的な特徴です

- どんどん試せる
- 継続的にリリース出来る
- 顧客に出して、評価して、改善してというcycleが短い環境

* どうしたらcycleを短く出来るのか


* 既存に追加 vs 新規で作る

そのまま継ぎ足しでリリースしたほうがその場で既存の model にアクセス出来るの方が楽
新規の場合は、既存環境関係なく作ることが出来る
一つのことに集中してうまくすることに特化することが出来る

* なぜ一つのことに集中するといいのか

単純に考えることが絞られる
分岐が多いほど作るのが大変になる

**最終的に、どんどん一つの上手く出来るアプリケーションを出していくほうが、良い**

* どんどん出していくにはどうすればいいのか

インフラチームがボトルネックにならないでどんどん自分たちでリリース出来る環境があるといい

* リリースできる環境にするためには何が必要か

- クラスタリング
- ネットワーク
- 名前空間

* なぜ Kubernetes を使うとサービスが加速するのか？

上述のものがある

* もっと別の良い方法で達成できないのか？

ECS や GCP 、 Heroku では出来ないのか?

* 実際にどのくらいできてる？できていないなら何が足りてない？

* kubernetes で実際に Release までやる

- application リリース
- logging の設定
- monitoring の設定
